{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\chandan\\\\Sharpener projects\\\\NextJS\\\\01-starting-project\\\\pages\\\\aboutus\\\\[developerID].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nvar details = [{\n  id: 1,\n  name: 'Yash',\n  role: 'Senior Developer'\n}, {\n  id: 2,\n  name: 'Vaibhav',\n  role: 'Backend Developer'\n}, {\n  id: 3,\n  name: 'Suresh',\n  role: 'Frontend Developer'\n}];\n\nfunction DeveloperPage() {\n  _s();\n\n  var router = useRouter();\n  var developerID = router.query.developerID;\n  var developer = details.find(function (dev) {\n    return dev.id === parseInt(developerID);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: developer ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [developer.name, \", \", developer.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Developer doesn't exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeveloperPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = DeveloperPage;\nexport default DeveloperPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeveloperPage\");","map":{"version":3,"sources":["D:/chandan/Sharpener projects/NextJS/01-starting-project/pages/aboutus/[developerID].js"],"names":["useRouter","details","id","name","role","DeveloperPage","router","developerID","query","developer","find","dev","parseInt"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,IAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CADY,EAEZ;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,SAAf;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CAFY,EAGZ;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,QAAf;AAAyBC,EAAAA,IAAI,EAAE;AAA/B,CAHY,CAAhB;;AAMA,SAASC,aAAT,GAAyB;AAAA;;AACrB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AADqB,MAEbO,WAFa,GAEGD,MAAM,CAACE,KAFV,CAEbD,WAFa;AAIrB,MAAME,SAAS,GAAGR,OAAO,CAACS,IAAR,CAAa,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACT,EAAJ,KAAWU,QAAQ,CAACL,WAAD,CAAvB;AAAA,GAAhB,CAAlB;AAEA,sBACI;AAAA,cACKE,SAAS,gBACN;AAAA,iBAAKA,SAAS,CAACN,IAAf,QAAuBM,SAAS,CAACL,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAfQC,a;UACUL,S;;;KADVK,a;AAiBT,eAAeA,aAAf","sourcesContent":["import { useRouter } from 'next/router';\r\n\r\nconst details = [\r\n    { id: 1, name: 'Yash', role: 'Senior Developer' },\r\n    { id: 2, name: 'Vaibhav', role: 'Backend Developer' },\r\n    { id: 3, name: 'Suresh', role: 'Frontend Developer' }\r\n];\r\n\r\nfunction DeveloperPage() {\r\n    const router = useRouter();\r\n    const { developerID } = router.query;\r\n\r\n    const developer = details.find(dev => dev.id === parseInt(developerID));\r\n\r\n    return (\r\n        <div>\r\n            {developer ? (\r\n                <h1>{developer.name}, {developer.role}</h1>\r\n            ) : (\r\n                <h1>Developer doesn't exist</h1>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeveloperPage;\r\n"]},"metadata":{},"sourceType":"module"}